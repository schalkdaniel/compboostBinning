// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// binnedMatMult
arma::mat binnedMatMult(const arma::mat& X, const arma::uvec& k, const arma::vec& w, const bool use_fast_acc);
RcppExport SEXP _compboostBinning_binnedMatMult(SEXP XSEXP, SEXP kSEXP, SEXP wSEXP, SEXP use_fast_accSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const bool >::type use_fast_acc(use_fast_accSEXP);
    rcpp_result_gen = Rcpp::wrap(binnedMatMult(X, k, w, use_fast_acc));
    return rcpp_result_gen;
END_RCPP
}
// binnedMatMultResponse
arma::mat binnedMatMultResponse(const arma::mat& X, const arma::vec& y, const arma::uvec& k, const arma::vec& w);
RcppExport SEXP _compboostBinning_binnedMatMultResponse(SEXP XSEXP, SEXP ySEXP, SEXP kSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(binnedMatMultResponse(X, y, k, w));
    return rcpp_result_gen;
END_RCPP
}
// binnedSparseMatMult
arma::mat binnedSparseMatMult(const arma::sp_mat& X, const arma::uvec& k, const arma::vec& w);
RcppExport SEXP _compboostBinning_binnedSparseMatMult(SEXP XSEXP, SEXP kSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(binnedSparseMatMult(X, k, w));
    return rcpp_result_gen;
END_RCPP
}
// binVectorCustom
arma::vec binVectorCustom(const arma::vec& x, const unsigned int n_bins);
RcppExport SEXP _compboostBinning_binVectorCustom(SEXP xSEXP, SEXP n_binsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type n_bins(n_binsSEXP);
    rcpp_result_gen = Rcpp::wrap(binVectorCustom(x, n_bins));
    return rcpp_result_gen;
END_RCPP
}
// binVector
arma::vec binVector(const arma::vec& x);
RcppExport SEXP _compboostBinning_binVector(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(binVector(x));
    return rcpp_result_gen;
END_RCPP
}
// calculateIndexVector
arma::uvec calculateIndexVector(const arma::vec& x, const arma::vec& x_bins);
RcppExport SEXP _compboostBinning_calculateIndexVector(SEXP xSEXP, SEXP x_binsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x_bins(x_binsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateIndexVector(x, x_bins));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_compboostBinning_binnedMatMult", (DL_FUNC) &_compboostBinning_binnedMatMult, 4},
    {"_compboostBinning_binnedMatMultResponse", (DL_FUNC) &_compboostBinning_binnedMatMultResponse, 4},
    {"_compboostBinning_binnedSparseMatMult", (DL_FUNC) &_compboostBinning_binnedSparseMatMult, 3},
    {"_compboostBinning_binVectorCustom", (DL_FUNC) &_compboostBinning_binVectorCustom, 2},
    {"_compboostBinning_binVector", (DL_FUNC) &_compboostBinning_binVector, 1},
    {"_compboostBinning_calculateIndexVector", (DL_FUNC) &_compboostBinning_calculateIndexVector, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_compboostBinning(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
